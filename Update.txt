remove("PatientsInfo.txt");
remove("Prescriptions.txt");
FILE* K = fopen("PatientsInfo.txt", "w+");
FILE* C = fopen("Prescriptions.txt", "w+");
puts("Select(1) to update FirstName");
puts("Select(2) to update LastName");
puts("Select(3) to update ID");
puts("Select(4) to update PhoneNumber");
puts("Select(5) to update FileNumber");
puts("Select(6) to update Reason for Reference");
puts("Select(7) to update Price");
puts("Select(8) to update Price Date");
puts("Select(9) to update Prescription Date");
puts("Select(10) to update Drugs");
puts("Select(11) to update Dosage");
printf("Enter a number:");
scanf("%d", &c);
if (c == 1) {
  puts("Please write the New FirstName");
  scanf("%s", new_fName);
  int i = 0;
  while (i < v) {
    if (i == z) {
      strcpy(p[z].fName, new_fName);
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
//______________________________________________________________________________
if (c == 2) {
  puts("Please write the new LastName");
  scanf("%s", new_lName);
  int i = 0;
  while (i < v) {
    if (i == z) {
      strcpy(p[z].lName, new_lName);
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
//______________________________________________________________________________
if (c == 3) {
  puts("Please write the new ID");
  scanf("%lld", &new_id);
  int i = 0;
  while (i < v) {
    if (i == z) {
      p[z].id == new_id;
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
//______________________________________________________________________________
if (c == 4) {
  puts("Please write the new PhoneNumber");
  scanf("%lld", &new_pNumber);
  int i = 0;
  while (i < v) {
    if (i == z) {
      p[z].pNumber = new_pNumber;
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
//______________________________________________________________________________
if (c == 5) {
  puts("Please write the new FileNumber");
  scanf("%lld", &new_fId);
  int i = 0;
  while (i < v) {
    if (i == z) {
      p[z].fId = new_fId;
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
//______________________________________________________________________________
if (c == 6) {
  puts("Please write the new Reason for Reference");
  scanf("%s", new_cause);
  int i = 0;
  while (i < v) {
    if (i == z) {
      strcpy(p[z].cause, new_cause);
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
//______________________________________________________________________________
if (c == 7) {
  puts("Please write the new Price");
  scanf("%lld", &new_price);
  int i = 0;
  while (i < v) {
    if (i == z) {
      p[z].price += new_price;
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
//______________________________________________________________________________
if (c == 8) {
  puts("Please write the new Price Date");
  scanf("%s", new_price_Date);
  int i = 0;
  while (i < v) {
    if (i == z) {
      strcpy(p[z].price_Date, new_price_Date);
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
//______________________________________________________________________________
if (c == 9) {
  puts("Please write the new Prescription Date");
  scanf("%s", new_noDate);
  int i = 0;
  while (i < v) {
    if (i == z) {
      strcpy(p[z].noDate, new_noDate);
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
//______________________________________________________________________________
if (c == 10) {
  puts("Please write the new Drugs");
  scanf("%s", new_Drug);
  int i = 0;
  while (i < v) {
    if (i == z) {
      strcpy(p[z].Drug, new_Drug);
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
//______________________________________________________________________________
if (c == 11) {
  puts("Please write the new Dosage");
  scanf("%s", new_Dosage);
  int i = 0;
  while (i < v) {
    if (i == z) {
      strcpy(p[z].dosage, new_Dosage);
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    else if (i != z){
      fprintf(K, "%s\n", p[i].fName);
      fprintf(C, "%s\n", p[i].fName);
      fprintf(K, "%s\n", p[i].lName);
      fprintf(C, "%s\n", p[i].lName);
      fprintf(K, "%lld\n", p[i].id);
      fprintf(K, "%lld\n", p[i].pNumber);
      fprintf(K, "%lld\n", p[i].fId);
      fprintf(K, "%s\n", p[i].cause);
      fprintf(K, "%lld\n", p[i].price);
      fprintf(K, "%s\n", p[i].price_Date);
      fprintf(K, "%s\n", p[i].noDate);
      fprintf(C, "%s\n", p[i].noDate);
      fprintf(K, "%s\n", p[i].Drug);
      fprintf(C, "%s\n", p[i].Drug);
      fprintf(K, "%s\n", p[i].dosage);
      fprintf(C, "%s\n", p[i].dosage);
      fprintf(K, "\n");
      fprintf(C, "\n");
    }
    i++;
  }
  puts("Patients Info succssesfully updated!");
}
fclose(K);
